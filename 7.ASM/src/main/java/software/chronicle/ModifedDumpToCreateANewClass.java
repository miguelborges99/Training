package software.chronicle;

import jdk.internal.org.objectweb.asm.*;

import java.io.DataOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.util.Arrays;

public class ModifedDumpToCreateANewClass implements Opcodes {

    public static byte[] dump(final String name) throws Exception {

        ClassWriter cw = new ClassWriter(0);
        FieldVisitor fv;
        MethodVisitor mv;
        AnnotationVisitor av0;

        cw.visit(V1_5, ACC_PUBLIC + ACC_SUPER, "software/chronicle/" + name, null, "java/lang/Object", null);

        {
            mv = cw.visitMethod(ACC_PUBLIC, "<init>", "()V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
            mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
            mv.visitLdcInsn("hello world");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC + ACC_STATIC, "main", "([Ljava/lang/String;)V", null, null);
            mv.visitCode();
            mv.visitTypeInsn(NEW, "software/chronicle/" + name);
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "software/chronicle/" + name, "<init>", "()V", false);
            mv.visitInsn(POP);
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 1);
            mv.visitEnd();
        }
        cw.visitEnd();

        return cw.toByteArray();
    }


    public static void main(String[] args) throws Exception {
        String name = "HelloWorld2";
        byte[] bytes = dump(name);
        System.out.println(Arrays.toString(bytes));

        File dir = new File("software/chronicle/");
        dir.mkdirs();

        File file = new File("software/chronicle/" + name + ".class");
        System.out.println(file.getAbsoluteFile());
        DataOutputStream dout = new DataOutputStream(new FileOutputStream(file));
        dout.write(bytes);

        // now run the newly generated byte code ( from your working directly )
        //$ java software.chronicle.HelloWorld2

    }

}
